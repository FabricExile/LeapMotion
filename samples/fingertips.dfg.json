{
  "objectType" : "Graph",
  "metadata" : {
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : 0.9032538533210754,\n    \"y\" : -0.1868427097797394,\n    \"z\" : 0.3862922787666321,\n    \"t\" : 39.85196304321289\n    },\n  \"row1\" : {\n    \"x\" : -1.341104081120648e-07,\n    \"y\" : 0.9002254009246826,\n    \"z\" : 0.4354234933853149,\n    \"t\" : 44.9205322265625\n    },\n  \"row2\" : {\n    \"x\" : -0.4291059374809265,\n    \"y\" : -0.3932980000972748,\n    \"z\" : 0.8131324052810669,\n    \"t\" : 83.88745880126953\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "1",
    "uiGraphZoom" : "{\"value\": 0.733904}",
    "camera_focalDistance" : "103.1655426025391",
    "timeline_current" : "1",
    "timeline_end" : "50",
    "uiGraphPan" : "{\"x\": 239.687, \"y\": 66.632}"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "this",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "timeline",
      "execPortType" : "In",
      "typeSpec" : "Float32"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "justShowTips",
      "execPortType" : "In",
      "typeSpec" : "Boolean"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": -120.543, \"y\": 225.678}"
        },
      "name" : "LeapController",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.LeapMotion.LeapController.LeapController"
      },
    {
      "objectType" : "Var",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 44.4081, \"y\": 237.679}"
        },
      "name" : "leap",
      "ports" : [
        {
          "objectType" : "VarPort",
          "nodePortType" : "IO",
          "name" : "value"
          }
        ],
      "dataType" : "LeapController",
      "extDep" : "LeapMotion:*"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 186.425, \"y\": 230.678}"
        },
      "name" : "Frame",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "history"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.LeapMotion.LeapController.Frame"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 344.389, \"y\": 244.678}"
        },
      "name" : "Fingers",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.LeapMotion.LeapFrame.Fingers"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 726.258, \"y\": 148.233}"
        },
      "name" : "NextJoint",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.LeapMotion.LeapBone.NextJointArray"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 581.33, \"y\": -33.4163}"
        },
      "name" : "Xfo",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "ori"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "tr"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "sc"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Exts.Math.Xfo.ComposeXfoArray"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 939.242, \"y\": 77.9535}"
        },
      "name" : "TransformVector",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "v"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Exts.Math.Xfo.TransformVectorArray"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 401.33, \"y\": -29.4163}"
        },
      "name" : "Vec3",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Vec3" : {
              "x" : 0.1000000014901161,
              "y" : 0.1000000014901161,
              "z" : 0.1000000014901161
              }
            },
          "name" : "element"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "count"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "array"
          }
        ],
      "executable" : "Fabric.Exts.Math.Constants.Vec3Array"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 1129, \"y\": -89}"
        },
      "name" : "EmptyDrawingHandle",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "handle"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 1117.76, \"y\": 85.4535}"
        },
      "name" : "Xfo_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "ori"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "tr"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "sc"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Exts.Math.Xfo.ComposeXfoArray"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 1327.56, \"y\": 135.441}"
        },
      "name" : "DrawPolygonMeshInstances",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "name"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "color"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "transforms"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "mesh"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "wireFrame"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "doubleSided"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "instance"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 729.451, \"y\": 416.1}"
        },
      "name" : "EmptyPolygonMesh",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "mesh"
          }
        ],
      "executable" : "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 928.451, \"y\": 375.1}"
        },
      "name" : "AddSphere",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "xfo"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "radius"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "loops"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "sides"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "setNormals"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "setUVs"
          }
        ],
      "executable" : "Fabric.Exts.Geometry.PolygonMesh.AddSphere"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 1122.47, \"y\": 381.1}"
        },
      "name" : "Cache",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          }
        ],
      "executable" : "Fabric.Core.Data.Cache"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 752.322, \"y\": 50.2679}"
        },
      "name" : "Cache_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          }
        ],
      "executable" : "Fabric.Core.Data.Cache"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\": 500.949, \"y\": 148.892}"
        },
      "name" : "GetBones",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result_2"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "cond"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "this"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "metadata" : {
          "uiGraphZoom" : "{\"value\": 0.733904}",
          "uiGraphPan" : "{\"x\": 1313.86, \"y\": -43.578}"
          },
        "title" : "",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "result_2",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "cond",
            "execPortType" : "In",
            "typeSpec" : "Boolean"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "this",
            "execPortType" : "In",
            "typeSpec" : "LeapFinger[]"
            }
          ],
        "extDeps" : {},
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -576.886, \"y\": 52.3925}"
              },
            "name" : "Bone",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "boneIx"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "ThirdParty.LeapMotion.LeapFinger.BoneArray"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -752.214, \"y\": 125.214}"
              },
            "name" : "UInt32",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "defaultValues" : {
                  "UInt32" : 3
                  },
                "name" : "element"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "count"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "array"
                }
              ],
            "executable" : "Fabric.Core.Constants.UInt32Array"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": 181.115, \"y\": -24.9959}"
              },
            "name" : "If",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "defaultValues" : {
                  "Boolean" : false
                  },
                "name" : "cond"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "if_true"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "if_false"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Core.Control.If"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -370.936, \"y\": 147.708}"
              },
            "name" : "Add",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "lhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "rhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Core.Math.Add"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -202.284, \"y\": 248.519}"
              },
            "name" : "Add_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "lhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "rhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Core.Math.Add"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -26.4735, \"y\": 339.498}"
              },
            "name" : "Add2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "lhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "rhs"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Core.Math.Add"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -575.646, \"y\": 184.354}"
              },
            "name" : "Bone_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "boneIx"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "ThirdParty.LeapMotion.LeapFinger.BoneArray"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -750.974, \"y\": 257.175}"
              },
            "name" : "UInt32_4",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "defaultValues" : {
                  "UInt32" : 2
                  },
                "name" : "element"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "count"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "array"
                }
              ],
            "executable" : "Fabric.Core.Constants.UInt32Array"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -567.956, \"y\": 320.054}"
              },
            "name" : "Bone2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "boneIx"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "ThirdParty.LeapMotion.LeapFinger.BoneArray"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -743.284, \"y\": 392.875}"
              },
            "name" : "UInt324",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "defaultValues" : {
                  "UInt32" : 1
                  },
                "name" : "element"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "count"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "array"
                }
              ],
            "executable" : "Fabric.Core.Constants.UInt32Array"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -561.766, \"y\": 454.218}"
              },
            "name" : "Bone2_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "boneIx"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "ThirdParty.LeapMotion.LeapFinger.BoneArray"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\": -737.094, \"y\": 527.039}"
              },
            "name" : "UInt324_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "defaultValues" : {
                  "UInt32" : 0
                  },
                "name" : "element"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "count"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "array"
                }
              ],
            "executable" : "Fabric.Core.Constants.UInt32Array"
            }
          ],
        "connections" : {
          "cond" : [
            "If.cond"
            ],
          "this" : [
            "Bone.this",
            "Bone_2.this",
            "Bone2.this",
            "Bone2_2.this"
            ],
          "Bone.result" : [
            "If.if_true",
            "Add.lhs"
            ],
          "UInt32.array" : [
            "Bone.boneIx"
            ],
          "If.result" : [
            "result_2"
            ],
          "Add.result" : [
            "Add_2.lhs"
            ],
          "Add_2.result" : [
            "Add2.lhs"
            ],
          "Add2.result" : [
            "If.if_false"
            ],
          "Bone_2.result" : [
            "Add.rhs"
            ],
          "UInt32_4.array" : [
            "Bone_2.boneIx"
            ],
          "Bone2.result" : [
            "Add_2.rhs"
            ],
          "UInt324.array" : [
            "Bone2.boneIx"
            ],
          "Bone2_2.result" : [
            "Add2.rhs"
            ],
          "UInt324_2.array" : [
            "Bone2_2.boneIx"
            ]
          }
        },
      "title" : "Get Bones"
      }
    ],
  "connections" : {
    "justShowTips" : [
      "GetBones.cond"
      ],
    "LeapController.result" : [
      "leap.value"
      ],
    "leap.value" : [
      "Frame.this"
      ],
    "Frame.result" : [
      "Fingers.this"
      ],
    "Fingers.result" : [
      "GetBones.this"
      ],
    "NextJoint.result" : [
      "TransformVector.v"
      ],
    "Xfo.result" : [
      "Cache_2.value"
      ],
    "TransformVector.result" : [
      "Xfo_2.tr"
      ],
    "Vec3.array" : [
      "Xfo.sc"
      ],
    "EmptyDrawingHandle.handle" : [
      "DrawPolygonMeshInstances.this"
      ],
    "Xfo_2.result" : [
      "DrawPolygonMeshInstances.transforms"
      ],
    "DrawPolygonMeshInstances.this" : [
      "this"
      ],
    "EmptyPolygonMesh.mesh" : [
      "AddSphere.this"
      ],
    "AddSphere.this" : [
      "Cache.value"
      ],
    "Cache.value" : [
      "DrawPolygonMeshInstances.mesh"
      ],
    "Cache_2.value" : [
      "TransformVector.this"
      ],
    "GetBones.result_2" : [
      "NextJoint.this"
      ]
    },
  "requiredPresets" : {
    "ThirdParty.LeapMotion.LeapController.LeapController" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "\n\n Supported by LeapController"
        },
      "title" : "LeapController",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "LeapController"
          }
        ],
      "extDeps" : {
        "LeapMotion" : "*"
        },
      "code" : "require LeapMotion;\n\ndfgEntry {\n  result = LeapController();\n}\n"
      },
    "ThirdParty.LeapMotion.LeapController.Frame" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "* Returns a frame of tracking data from the Leap Motion software. Use the optional\n* history parameter to specify which frame to retrieve. Call frame() or\n* frame(0) to access the most recent frame; call frame(1) to access the\n* previous frame, and so on. If you use a history value greater than the\n* number of stored frames, then the controller returns an invalid frame.\n\n* \\include Controller_Frame_1.txt\n\n* You can call this function in your Listener implementation to get frames at the\n* Leap Motion frame rate:\n\n* \\include Controller_Listener_onFrame.txt\n\n* @param history The age of the frame to return, counting backwards from\n* the most recent frame (0) into the past and up to the maximum age (59).\n* @returns The specified frame; or, if no history parameter is specified,\n* the newest frame. If a frame is not available at the specified history\n* position, an invalid Frame is returned.\n* @since 1.0\n\n\n Supported by LeapController"
        },
      "title" : "Frame",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "this",
          "execPortType" : "In",
          "typeSpec" : "LeapController"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "history",
          "execPortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "LeapFrame"
          }
        ],
      "extDeps" : {
        "LeapMotion" : "*"
        },
      "code" : "require LeapMotion;\n\ndfgEntry {\n  result = this.frame(history);\n}\n"
      },
    "ThirdParty.LeapMotion.LeapFrame.Fingers" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "* The list of Finger objects detected in this frame, given in arbitrary order.\n* The list can be empty if no fingers are detected.\n\n* Use PointableList::extended() to remove non-extended fingers from the list.\n\n* \\include Frame_fingers.txt\n\n* @returns The FingerList containing all Finger objects detected in this frame.\n* @since 1.0\n\n\n Supported by LeapFrame"
        },
      "title" : "Fingers",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "this",
          "execPortType" : "In",
          "typeSpec" : "LeapFrame"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "LeapFinger[]"
          }
        ],
      "extDeps" : {
        "LeapMotion" : "*"
        },
      "code" : "require LeapMotion;\n\ndfgEntry {\n  result = this.fingers();\n}\n"
      },
    "ThirdParty.LeapMotion.LeapBone.NextJointArray" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "* The end of the bone, closest to the finger tip.\n\n* In anatomical terms, this is the distal end of the bone.\n\n* \\include Bone_nextJoint.txt\n\n* @returns The Vector containing the coordinates of the next joint position.\n* @since 2.0\n\n\n Supported by LeapBone"
        },
      "title" : "NextJoint[]",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "this",
          "execPortType" : "In",
          "typeSpec" : "LeapBone[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Vec3[]"
          }
        ],
      "extDeps" : {
        "LeapMotion" : "*"
        },
      "code" : "require LeapMotion;\n\noperator LeapMotion_LeapBone_nextJoint_task<<<index>>>(\n  io Vec3[] result\n, in LeapBone[] this\n) {\n  result[index] = this[index < this.size() ? index : 0].nextJoint();\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  Size task_size = this.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapBone_nextJoint_task(index, result, this);\n    }\n  } else {\n    LeapMotion_LeapBone_nextJoint_task<<<task_size>>>(result, this);\n  }\n}\n"
      },
    "Fabric.Exts.Math.Xfo.ComposeXfoArray" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/Math/Xfo.html"
        },
      "title" : "-> Xfo[]",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 0,\n  \"g\" : 191,\n  \"b\" : 232\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Quat[]" : [
              {
                "v" : {
                  "x" : 0,
                  "y" : 0,
                  "z" : 0
                  },
                "w" : 1
                }
              ]
            },
          "name" : "ori",
          "execPortType" : "In",
          "typeSpec" : "Quat[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3[]" : [
              {
                "x" : 0,
                "y" : 0,
                "z" : 0
                }
              ]
            },
          "name" : "tr",
          "execPortType" : "In",
          "typeSpec" : "Vec3[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3[]" : [
              {
                "x" : 1,
                "y" : 1,
                "z" : 1
                }
              ]
            },
          "name" : "sc",
          "execPortType" : "In",
          "typeSpec" : "Vec3[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Xfo[]"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "code" : "require Math;\n\noperator Math_Xfo_compose_task<<<index>>>(io Xfo[] result, in Quat[] ori, in Vec3[] tr, in Vec3[] sc) {\n  result[index].ori = ori[index < ori.size() ? index : 0];\n  result[index].tr = tr[index < tr.size() ? index : 0];\n  result[index].sc = sc[index < sc.size() ? index : 0];\n}\n\ndfgEntry {\n  if(ori.size() == 0) return;\n  if(tr.size() == 0) return;\n  if(sc.size() == 0) return;\n  Size task_size = 0;\n  if(task_size < ori.size()) task_size = ori.size();\n  if(task_size < tr.size()) task_size = tr.size();\n  if(task_size < sc.size()) task_size = sc.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size i = 0; i < task_size; i++) {\n      Math_Xfo_compose_task(i, result, ori, tr, sc);\n    }\n  } else {\n    Math_Xfo_compose_task<<<task_size>>>(result, ori, tr, sc);\n  }\n}\n"
      },
    "Fabric.Exts.Math.Xfo.TransformVectorArray" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/Math/Xfo.html",
        "uiTooltip" : "Transforms a vector with this transform\n\n Supported by Xfo"
        },
      "title" : "TransformVector[]",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Xfo[]" : [
              {
                "ori" : {
                  "v" : {
                    "x" : 0,
                    "y" : 0,
                    "z" : 0
                    },
                  "w" : 1
                  },
                "tr" : {
                  "x" : 0,
                  "y" : 0,
                  "z" : 0
                  },
                "sc" : {
                  "x" : 1,
                  "y" : 1,
                  "z" : 1
                  }
                }
              ]
            },
          "name" : "this",
          "execPortType" : "In",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3[]" : [
              {
                "x" : 0,
                "y" : 0,
                "z" : 0
                }
              ]
            },
          "name" : "v",
          "execPortType" : "In",
          "typeSpec" : "Vec3[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Vec3[]"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "code" : "require Math;\n\noperator Math_Xfo_transformVector_task<<<index>>>(\n  io Vec3[] result\n, in Xfo[] this\n, in Vec3[] v\n) {\n  result[index] = this[index < this.size() ? index : 0].transformVector(v[index < v.size() ? index : 0]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( v.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < v.size()) task_size = v.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      Math_Xfo_transformVector_task(index, result, this, v);\n    }\n  } else {\n    Math_Xfo_transformVector_task<<<task_size>>>(result, this, v);\n  }\n}\n"
      },
    "Fabric.Exts.Math.Constants.Vec3Array" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/Math/Vec3.html"
        },
      "title" : "Vec3[]",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3[]" : [
              {
                "x" : 0,
                "y" : 0,
                "z" : 0
                }
              ]
            },
          "name" : "element",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 1
            },
          "name" : "count",
          "execPortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "array",
          "execPortType" : "Out",
          "typeSpec" : "Vec3[]"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "code" : "dfgEntry {\n  array.resize(count);\n  for(Size i=0;i<count;i++)\n    array[i] = element;\n}\n"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "handle",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "nodes" : [
        {
          "objectType" : "Inst",
          "name" : "DrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "name"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawingHandle"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 674, \"y\": 79}"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          }
        ],
      "connections" : {
        "DrawingHandle.result" : [
          "handleVar.value"
          ],
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawingHandle" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "constructor taking a name for the root transform of this drawing handle\n\n Supported by DrawingHandle"
        },
      "title" : "DrawingHandle",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "code" : "require InlineDrawing;\n\ndfgEntry {\n  result = DrawingHandle(name);\n}\n"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "code" : "require InlineDrawing;\n\ndfgEntry {\n  this.clear();\n}\n"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "helper function to draw a mesh given a color + an array of transforms\n\n Supported by DrawingHandle"
        },
      "title" : "DrawPolygonMeshInstances",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Color" : {
              "r" : 0,
              "g" : 1,
              "b" : 0,
              "a" : 1
              }
            },
          "name" : "color",
          "execPortType" : "In",
          "typeSpec" : "Color"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "transforms",
          "execPortType" : "In",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "Out",
          "name" : "mesh",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "wireFrame",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "doubleSided",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "dummyResult",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "instance",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "code" : "require InlineDrawing;\n\ndfgEntry {\n  this.drawPolygonMeshInstances(name, color, transforms, mesh, wireFrame, doubleSided, dummyResult, instance);\n}\n"
      },
    "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh" : {
      "objectType" : "Graph",
      "title" : "EmptyPolygonMesh",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "mesh",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "nodes" : [
        {
          "objectType" : "Inst",
          "name" : "PolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "debugName"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "float64Positions"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 951, \"y\": 145}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.Clear",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 744, \"y\": 122}"
            },
          "name" : "meshVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "PolygonMesh",
          "extDep" : "Geometry:*"
          }
        ],
      "connections" : {
        "PolygonMesh.result" : [
          "meshVar.value"
          ],
        "Clear.this" : [
          "mesh"
          ],
        "meshVar.value" : [
          "Clear.this"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Constructor.\n\n Supported by PolygonMesh"
        },
      "title" : "PolygonMesh",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "debugName",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "float64Positions",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "code" : "require Geometry;\n\ndfgEntry {\n  result = PolygonMesh(debugName, float64Positions);\n}\n"
      },
    "Fabric.Exts.Geometry.PolygonMesh.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Clears all data, including points, polygons and attributes."
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "code" : "require Geometry;\n\ndfgEntry {\n  this.clear();\n}\n"
      },
    "Fabric.Exts.Geometry.PolygonMesh.AddSphere" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0-beta/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Appends a transformed sphere to this mesh.\nBefore applying the transformation, it will be centered at the origin.\n\n\nbuild the topology\nbuild the fan at the first pole.\nbuild the fan at the second pole.\nset positions and normals\nset uvs\nset the uvs on the the fan at the first pole.\n\n Supported by PolygonMesh"
        },
      "title" : "AddSphere",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "xfo",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 4
            },
          "name" : "radius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(3, 24)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 8
            },
          "name" : "loops",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(3, 24)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 8
            },
          "name" : "sides",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setNormals",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setUVs",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "code" : "require Geometry;\n\ndfgEntry {\n  this.addSphere(xfo, radius, loops, sides, setNormals, setUVs);\n}\n"
      },
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "code" : "dfgEntry {\n}\n"
      },
    "ThirdParty.LeapMotion.LeapFinger.BoneArray" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "< The pinky or little finger\n* The bone at a given bone index on this finger.\n\n* \\include Bone_iteration.txt\n\n* @param boneIx An index value from the Bone::Type enumeration identifying the\n* bone of interest.\n* @returns The Bone that has the specified bone type.\n* @since 2.0\n\n\n Supported by LeapFinger"
        },
      "title" : "Bone[]",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "this",
          "execPortType" : "In",
          "typeSpec" : "LeapFinger[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32[]" : [
              0
              ]
            },
          "name" : "boneIx",
          "execPortType" : "In",
          "typeSpec" : "UInt32[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "LeapBone[]"
          }
        ],
      "extDeps" : {
        "LeapMotion" : "*"
        },
      "code" : "require LeapMotion;\n\noperator LeapMotion_LeapFinger_bone_task<<<index>>>(\n  io LeapBone[] result\n, in LeapFinger[] this\n, in UInt32[] boneIx\n) {\n  result[index] = this[index < this.size() ? index : 0].bone(boneIx[index < boneIx.size() ? index : 0]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( boneIx.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < boneIx.size()) task_size = boneIx.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapFinger_bone_task(index, result, this, boneIx);\n    }\n  } else {\n    LeapMotion_LeapFinger_bone_task<<<task_size>>>(result, this, boneIx);\n  }\n}\n"
      },
    "Fabric.Core.Constants.UInt32Array" : {
      "objectType" : "Func",
      "title" : "UInt32[]",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "element",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 1
            },
          "name" : "count",
          "execPortType" : "In",
          "typeSpec" : "SInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "array",
          "execPortType" : "Out",
          "typeSpec" : "UInt32[]"
          }
        ],
      "extDeps" : {},
      "code" : "\ndfgEntry {\n  array.resize(count);\n  for(Size i=0;i<count;i++)\n    array[i] = element;\n}\n"
      },
    "Fabric.Core.Control.If" : {
      "objectType" : "Func",
      "title" : "If",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "cond",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "if_true",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "if_false",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "code" : "\ndfgEntry {\n\tresult = cond ? if_true : if_false;\n}\n"
      },
    "Fabric.Core.Math.Add" : {
      "objectType" : "Func",
      "title" : "Add +",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "rhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "code" : "\ndfgEntry {\n\tresult = lhs + rhs;\n}\n"
      }
    },
  "args" : [
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Float32",
      "value" : 1
      },
    {
      "type" : "Boolean",
      "value" : false
      }
    ]
  }