// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* The center of the InteractionBox in device coordinates (millimeters). This point\n* is equidistant from all sides of the box.\n\n* \\include InteractionBox_center.txt\n\n* @returns The InteractionBox center in device coordinates.\n* @since 1.0\n\n\n Supported by LeapInteractionBox"
    },
  "title" : "Center[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "LeapInteractionBox[]"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "Vec3[]"
      }
    ],
  "extDeps" : {
    "LeapMotion" : "*"
    },
  "presetGUID" : "F4BE5DDD4189D1A11F600B1D0CA78352",
  "code" : "require LeapMotion;\n\noperator LeapMotion_LeapInteractionBox_center_task<<<index>>>(\n  io Vec3[] result\n, in LeapInteractionBox[] this\n) {\n  result[index] = this[index < this.size() ? index : this.size() - 1].center();\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  Size task_size = this.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapInteractionBox_center_task(index, result, this);\n    }\n  } else {\n    LeapMotion_LeapInteractionBox_center_task<<<task_size>>>(result, this);\n  }\n}\n"
  }