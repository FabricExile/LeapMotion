// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* Enables or disables reporting of a specified gesture type.\n\n* By default, all gesture types are disabled. When disabled, gestures of the\n* disabled type are never reported and will not appear in the frame\n* gesture list.\n\n* \\include Controller_enableGesture.txt\n\n* As a performance optimization, only enable recognition for the types\n* of movements that you use in your application.\n\n* @param type The type of gesture to enable or disable. Must be a\n* member of the Gesture::Type enumeration.\n* @param enable True, to enable the specified gesture type; False,\n* to disable.\n* @see Controller::isGestureEnabled()\n* @since 1.0\n\n\n Supported by LeapController"
    },
  "title" : "EnableGesture[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "LeapController[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "UInt32[]" : [
          0
          ]
        },
      "name" : "gesture",
      "execPortType" : "In",
      "typeSpec" : "UInt32[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Boolean[]" : [
          false
          ]
        },
      "name" : "enable",
      "execPortType" : "In",
      "typeSpec" : "Boolean[]"
      }
    ],
  "extDeps" : {
    "LeapMotion" : "*"
    },
  "presetGUID" : "549404099032D8D40D3FCC33F7B9801E",
  "code" : "require LeapMotion;\n\noperator LeapMotion_LeapController_enableGesture_task<<<index>>>(\n  in LeapController[] this\n, in UInt32[] gesture\n, in Boolean[] enable\n) {\n  this[index < this.size() ? index : this.size() - 1].enableGesture(gesture[index < gesture.size() ? index : gesture.size() - 1], enable[index < enable.size() ? index : enable.size() - 1]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( gesture.size() == 0) return;\n  if( enable.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < gesture.size()) task_size = gesture.size();\n  if(task_size < enable.size()) task_size = enable.size();\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapController_enableGesture_task(index, this, gesture, enable);\n    }\n  } else {\n    LeapMotion_LeapController_enableGesture_task<<<task_size>>>(this, gesture, enable);\n  }\n}\n"
  }