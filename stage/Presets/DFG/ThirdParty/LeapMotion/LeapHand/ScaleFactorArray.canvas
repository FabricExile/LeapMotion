// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* The scale factor derived from this hand's motion between the current frame\n* and the specified frame.\n\n* The scale factor is always positive. A value of 1.0 indicates no\n* scaling took place. Values between 0.0 and 1.0 indicate contraction\n* and values greater than 1.0 indicate expansion.\n\n* \\include Hand_scaleFactor.txt\n\n* The Leap Motion software derives scaling from the relative inward or outward motion of\n* a hand and its associated fingers (independent of translation\n* and rotation).\n\n* If a corresponding Hand object is not found in sinceFrame, or if either\n* this frame or sinceFrame are invalid Frame objects, then this method\n* returns 1.0.\n\n* @param sinceFrame The starting frame for computing the relative scaling.\n* @returns A positive value representing the heuristically determined\n* scaling change ratio of the hand between the current frame and that\n* specified in the sinceFrame parameter.\n* @since 1.0\n\n\n Supported by LeapHand"
    },
  "title" : "ScaleFactor[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "LeapHand[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "sinceFrame",
      "execPortType" : "In",
      "typeSpec" : "LeapFrame[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "Float32[]"
      }
    ],
  "extDeps" : {
    "LeapMotion" : "*"
    },
  "presetGUID" : "9133737C7ABB29995E253DBBA18BB577",
  "code" : "require LeapMotion;\n\noperator LeapMotion_LeapHand_scaleFactor_task<<<index>>>(\n  io Float32[] result\n, in LeapHand[] this\n, in LeapFrame[] sinceFrame\n) {\n  result[index] = this[index < this.size() ? index : this.size() - 1].scaleFactor(sinceFrame[index < sinceFrame.size() ? index : sinceFrame.size() - 1]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( sinceFrame.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < sinceFrame.size()) task_size = sinceFrame.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapHand_scaleFactor_task(index, result, this, sinceFrame);\n    }\n  } else {\n    LeapMotion_LeapHand_scaleFactor_task<<<task_size>>>(result, this, sinceFrame);\n  }\n}\n"
  }