// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "* The estimated probability that the overall motion between the current\n* frame and the specified frame is intended to be a scaling motion.\n\n* \\include Frame_scaleProbability.txt\n\n* If either this frame or sinceFrame is an invalid Frame object, then this\n* method returns zero.\n\n* @param sinceFrame The starting frame for computing the relative scaling.\n* @returns A value between 0 and 1 representing the estimated probability\n* that the overall motion between the current frame and the specified frame\n* is intended to be a scaling motion.\n* @since 1.0\n\n\n Supported by LeapFrame"
    },
  "title" : "ScaleProbability[]",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "LeapFrame[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "sinceFrame",
      "execPortType" : "In",
      "typeSpec" : "LeapFrame[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "Float32[]"
      }
    ],
  "extDeps" : {
    "LeapMotion" : "*"
    },
  "presetGUID" : "67A9FF2A951405BEBE68ACB9A7D5A576",
  "code" : "require LeapMotion;\n\noperator LeapMotion_LeapFrame_scaleProbability_task<<<index>>>(\n  io Float32[] result\n, in LeapFrame[] this\n, in LeapFrame[] sinceFrame\n) {\n  result[index] = this[index < this.size() ? index : this.size() - 1].scaleProbability(sinceFrame[index < sinceFrame.size() ? index : sinceFrame.size() - 1]);\n}\n\ndfgEntry {\n  if( this.size() == 0) return;\n  if( sinceFrame.size() == 0) return;\n  Size task_size = this.size();\n  if(task_size < sinceFrame.size()) task_size = sinceFrame.size();\n  result.resize(task_size);\n  if(task_size < 10000 /* pex margin */) {\n    for(Size index = 0; index < task_size; index++) {\n      LeapMotion_LeapFrame_scaleProbability_task(index, result, this, sinceFrame);\n    }\n  } else {\n    LeapMotion_LeapFrame_scaleProbability_task<<<task_size>>>(result, this, sinceFrame);\n  }\n}\n"
  }